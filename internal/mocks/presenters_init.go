// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/eleven-sh/cli/internal/presenters (interfaces: InitViewer)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	views "github.com/eleven-sh/cli/internal/views"
	gomock "github.com/golang/mock/gomock"
)

// PresentersInitViewer is a mock of InitViewer interface.
type PresentersInitViewer struct {
	ctrl     *gomock.Controller
	recorder *PresentersInitViewerMockRecorder
}

// PresentersInitViewerMockRecorder is the mock recorder for PresentersInitViewer.
type PresentersInitViewerMockRecorder struct {
	mock *PresentersInitViewer
}

// NewPresentersInitViewer creates a new mock instance.
func NewPresentersInitViewer(ctrl *gomock.Controller) *PresentersInitViewer {
	mock := &PresentersInitViewer{ctrl: ctrl}
	mock.recorder = &PresentersInitViewerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *PresentersInitViewer) EXPECT() *PresentersInitViewerMockRecorder {
	return m.recorder
}

// View mocks base method.
func (m *PresentersInitViewer) View(arg0 views.InitViewData) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "View", arg0)
}

// View indicates an expected call of View.
func (mr *PresentersInitViewerMockRecorder) View(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "View", reflect.TypeOf((*PresentersInitViewer)(nil).View), arg0)
}
